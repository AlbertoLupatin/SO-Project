par(mfrow = c(1, 3))
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2")
theme_minimal()
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2")
theme_minimal()
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2")
ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2")
theme_minimal()
ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2")
theme_minimal()
ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2")
theme_minimal()
SpatialDimPlot(seurat, label = TRUE, label.color = "black") +
scale_fill_manual(values = c(
"0" = "white",
"1" = "red",
"2" = "blue",
"3" = "red",
"4" = "blue",
"5" = "white",
"6" = "red",
"7" = "blue",
"8" = "white",
"9" = "red",
"10" = "blue")) +
NoLegend()
# Test the correlation
corr_expr <- GetAssayData(seurat) %>%
as.data.frame() %>%
filter(rownames(.) %in% c("KRT20", "MKI67", "ACTA2")) %>%
t(.)
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2")
theme_minimal()
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2")
theme_minimal()
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2")
theme_minimal()
krt_acta | mki_acta | krt_mki
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal()
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and MKI67") +
theme_minimal()
krt_acta | mki_acta | krt_mki
library(ggpubr)
ggarrange(krt_acta, mki_acta, krt_mki)
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3, align = "h")
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
xlim(0, 0.6)
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
xlim(0, 0.6)
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and MKI67") +
theme_minimal()+
xlim(0, 0.6)
library(ggpubr)
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3)
krt_acta
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
xlim(0, 1)
krt_acta
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
ylim(0, 0.6)
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
ylim(0, 0.6)
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and MKI67") +
theme_minimal()+
ylim(0, 0.6)
library(ggpubr)
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3)
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
ylim(0, 0.6)
krt_acta
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
ylim(0, 1)
krt_acta
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
ylim(0, 1)
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
ylim(0, 1)
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and MKI67") +
theme_minimal()+
ylim(0, 1)
library(ggpubr)
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3)
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() #+
krt_acta
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
ylim(0, 5)
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
ylim(0, 5)
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and MKI67") +
theme_minimal()+
ylim(0, 5)
library(ggpubr)
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3)
mki_acta
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()
mki_acta
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
ylim(0, 10)
mki_acta
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
ylim(0, 8)
mki_acta
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
ylim(0, 6)
mki_acta
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
ylim(0, 5)
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between MKI67 and ACTA2") +
theme_minimal()+
ylim(0, 5)
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and MKI67") +
theme_minimal()+
ylim(0, 5)
library(ggpubr)
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3)
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_point(aes(color = seurat$seurat_clusters)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
ggtitle("Correlation between KRT20 and ACTA2") +
theme_minimal() +
ylim(0, 5)
krt_acta
# Test the correlation
corr_expr <- GetAssayData(seurat) %>%
as.data.frame() %>%
filter(rownames(.) %in% c("KRT20", "MKI67", "ACTA2")) %>%
t(.) %>%
as.data.frame()
?sprintf
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Correlation between KRT20 and ACTA2", subtitle = cor_krt_acta)
cor_krt_acta <- cor(corr_expr$KRT20, corr_expr$ACTA2, method = "pearson")
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Correlation between KRT20 and ACTA2", subtitle = round(cor_krt_acta, 2))
krt_acta
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Correlation between MKI67 and ACTA2", subtitle = round(cor_krt_acta, 2)) +
theme_minimal()+
ylim(0, 5)
corr_expr <- GetAssayData(seurat) %>%
as.data.frame() %>%
filter(rownames(.) %in% c("KRT20", "MKI67", "ACTA2")) %>%
t(.) %>%
as.data.frame()
cor_krt_acta <- cor(corr_expr$KRT20, corr_expr$ACTA2, method = "pearson")
krt_acta <- ggplot(corr_expr, aes(x = KRT20, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Correlation between KRT20 and ACTA2", subtitle = round(cor_krt_acta, 2)) +
theme_minimal() +
ylim(0, 5)
cor_mki_acta <- cor(corr_expr$MKI67, corr_expr$ACTA2, method = "pearson")
mki_acta <- ggplot(corr_expr, aes(x = MKI67, y = ACTA2)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Correlation between MKI67 and ACTA2", subtitle = round(cor_mki_acta, 2)) +
theme_minimal()+
ylim(0, 5)
cor_krt_mki <- cor(corr_expr$KRT20, corr_expr$MKI67, method = "pearson")
krt_mki <- ggplot(corr_expr, aes(x = KRT20, y = MKI67)) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Correlation between KRT20 and MKI67", subtitle = round(cor_krt_mki, 2)) +
theme_minimal()+
ylim(0, 5)
library(ggpubr)
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3)
round(cor_krt_mki, 2)
SpatialFeaturePlot(
object = seurat,
features = rownames(de_markers)[1:2],
alpha = c(0.1, 1),
ncol = 2)
de_markers <- FindMarkers(seurat, ident.1 = 3, ident.2 = 6)
SpatialFeaturePlot(
object = seurat,
features = rownames(de_markers)[1:2],
alpha = c(0.1, 1),
ncol = 2)
VlnPlot(seurat, features = selected_features,
group.by = "seurat_clusters", sort = "increasing")
de_markers <- FindMarkers(seurat, ident.1 = 3, ident.2 = 4)
SpatialFeaturePlot(
object = seurat,
features = rownames(de_markers)[1:2],
alpha = c(0.1, 1),
ncol = 2)
seurat <- FindSpatiallyVariableFeatures(
seurat,
assay = "SCT",
features = VariableFeatures(seurat),
selection.method = "moransi")
top.features <- rownames(slice_min(seurat[["SCT"]]@meta.features,
moransi.spatially.variable.rank,
n = 2))
SpatialFeaturePlot(
seurat,
features = top.features,
ncol = 2,
alpha = c(0.1, 1.5)
)
SpatialPlot(seurat, features = c("CD3D", "CD4", "FOXP3", "CD68", "CD163", "MS4A1", "CD274", "PDCD1"),
image.alpha = 0.7, pt.size.factor = 1.5, ncol = 4)
DoHeatmap(seurat, features = c("CD3D", "CD4", "FOXP3", "CD68", "CD163", "MS4A1", "CD274", "PDCD1"))
DoHeatmap(seurat, features = c("CD3D", "CD4", "FOXP3", "CD68", "CD163", "MS4A1", "CD274", "PDCD1")) +
scale_fill_gradientn(colors = c("blue", "white", "red"))
DoHeatmap(seurat, features = c("CD3D", "CD4", "FOXP3", "CD68", "CD163", "CD20", "CD279")) +
scale_fill_gradientn(colors = c("blue", "white", "red"))
VlnPlot(seurat, features = c("CD3D", "CD4", "FOXP3", "CD68", "CD163", "CD20", "CD279"), sort = "increasing")
all
spatial_selected <- SpatialFeaturePlot(seurat, features = selected_features,
pt.size.factor = 2, alpha = c(0.1, 1.5))
spatial_selected
VlnPlot(seurat, features = selected_features,
group.by = "seurat_clusters", sort = "increasing")
ggarrange(krt_acta, mki_acta, krt_mki, ncol = 3)
print(rownames(seurat@assays$Spatial@counts)[grep("CD3D|CD4|CD68|CD163|CD8A|CD274|FOXP3|MS4A1|PDCD1",
rownames(seurat@assays$Spatial@counts))])
print(rownames(seurat@assays$RNA@layers$counts)[grep("CD3D|CD4|CD68|CD163|CD8A|CD274|FOXP3|MS4A1|PDCD1",
rownames(seurat@assays$RNA@layers$counts))])
rownames(seurat@assays$RNA@layers$counts)
immune_markers <- c("CD3D", "CD4", "FOXP3", "CD68", "CD163", "CD20", "CD279", "CD8A")
DoHeatmap(seurat, features = immune_markers) +
scale_fill_gradientn(colors = c("blue", "white", "red"))
VlnPlot(seurat, features = immune_markers, sort = "increasing")
VlnPlot(seurat, features = selected_features,
group.by = "seurat_clusters", sort = "increasing")
all
VlnPlot(seurat, features = c("MLH1", "MSH2"), group.by = "seurat_clusters")
corr_imm_expr <- GetAssayData(seurat) %>%
as.data.frame() %>%
filter(rownames(.) %in% c("KRT20", "ACTA2", "CD3D", "CD4", "CD68", "CD163")) %>%
t(.) %>%
as.data.frame()
cor_imm_matrix <- cor(corr_imm_expr, method = "pearson")
print(correlation_matrix)
print(cor_imm_matrix)
corrplot(cor_imm_matrix)
?corrplot
corrplot(cor_imm_matrix, method = "ellipse")
corrplot(cor_imm_matrix, method = "ellipse", type = "lower")
all
SpatialFeaturePlot(
seurat,
features = top.features,
ncol = 2,
alpha = c(0.1, 1.5)
)
top.features <- rownames(slice_min(seurat[["SCT"]]@meta.features,
moransi.spatially.variable.rank,
n = 5))
SpatialFeaturePlot(
seurat,
features = top.features,
ncol = 2,
alpha = c(0.1, 1.5)
)
seurat[["SCT"]]
grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features]))
grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features))
!(grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features)))
`%Nin%` <- Negate(`%in%`)
seurat[["SCT"]] %>% filter(rownames(.) %Nin% grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features)))
seurat[["SCT"]]@meta.features %>% filter(rownames(.) %Nin% grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features)))
top.features <- rownames(slice_min(seurat[["SCT"]]@meta.features %>%
filter(rownames(.) %Nin% grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features))),
moransi.spatially.variable.rank,
n = 5))
SpatialFeaturePlot(
seurat,
features = top.features,
ncol = 2,
alpha = c(0.1, 1.5)
)
grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features))
grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features %>% filter(rownames(.) %Nin% grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features))))
)
tmp <- rownames(seurat[["SCT"]]@meta.features)
tmp[-grep("DEPRECATED", tmp)]
length(tmp)
length(tmp[-grep("DEPRECATED", tmp)])
deprecated <- rownames(seurat[["SCT"]]@meta.features)[-grep("DEPRECATED", rownames(seurat[["SCT"]]@meta.features))]
top.features <- rownames(slice_min(seurat[["SCT"]]@meta.features %>%
filter(rownames(.) %in% deprecated),
moransi.spatially.variable.rank,
n = 5))
SpatialFeaturePlot(
seurat,
features = top.features,
ncol = 2,
alpha = c(0.1, 1.5)
)
tinytex::reinstall_tinytex(repository = "illinois")
all / spatial_selected
all <- SpatialDimPlot(seurat, label = TRUE,
facet.highlight = TRUE, ncol = 2) + NoLegend()
selected_features = c("KRT20", "ACTA2", "MKI67")
spatial_selected <- SpatialFeaturePlot(seurat, features = selected_features,
pt.size.factor = 2, alpha = c(0.1, 1.5))
all / spatial_selected
all /
spatial_selected
all
spatial_selected
all <- SpatialDimPlot(seurat, label = TRUE,
facet.highlight = TRUE, ncol = 2) + NoLegend()
selected_features = c("KRT20", "ACTA2", "MKI67")
spatial_selected <- SpatialFeaturePlot(seurat, features = selected_features,
pt.size.factor = 2, alpha = c(0.1, 1.5))
all
spatial_selected
SpatialFeaturePlot(seurat, features = selected_features) + NoLegend() + scale_fill_gradientn(colors = c("blue", "white", "red"))
VlnPlot(seurat, features = selected_features,
group.by = "seurat_clusters", sort = "increasing")
DoHeatmap(seurat, features = selected_features) + scale_fill_gradientn(colors = c("blue", "white", "red"))
all <- SpatialDimPlot(seurat, label = TRUE,
facet.highlight = TRUE, ncol = 2) + NoLegend()
all <- SpatialDimPlot(seurat, label = TRUE, facet.highlight = TRUE) + NoLegend()
all
?SpatialDimPlot
all <- SpatialDimPlot(seurat, label = TRUE) + NoLegend()
all
SpatialFeaturePlot(seurat, features = selected_features) + NoLegend() + scale_fill_gradientn(colors = c("blue", "white", "red"))
library(Matrix)
library(Seurat)
library(tidyverse)
library(ggplot2)
library(ggembl)
library(patchwork)
library(corrplot)
colors <- c("#6E100B", "#9EF94B", "#2B1333")
cnc_path <- './Data/Cancer'
# Create Seurat Object
counts <- ReadMtx(
mtx = file.path(cnc_path, "matrix.mtx.gz"),
features = file.path(cnc_path, "features.tsv.gz"),
cells = file.path(cnc_path, "barcodes.tsv.gz")
)
coordinates <- Read10X_Coordinates(file.path(cnc_path, "spatial/tissue_positions_list.csv"),
filter.matrix = T)
cnc <- CreateSeuratObject(counts, assay = "RNA")
# Add image
image <- Read10X_Image(file.path(cnc_path, "spatial"))
image_fixed <- new(
Class = "VisiumV1",
assay = "RNA",
key = "slice1_",
image = image@image,
scale.factors = image@scale.factors,
coordinates = coordinates
)
image_fixed@spot.radius <- Radius(image_fixed)
cnc@images$slice1 <- image_fixed
cnc <- subset(cnc, cells = intersect(colnames(cnc), rownames(coordinates)))
cnc <- AddMetaData(cnc, metadata = coordinates)
ctr_path <- "./Data/Control"
# Loading Seurat objects
epithelium <- readRDS(file.path(ctr_path, "epithelium.RDS"))
fibroblasts <- readRDS(file.path(ctr_path, "fibroblasts.RDS"))
# Merging the two objects into 1
ctr <- merge(epithelium, fibroblasts)
rm(epithelium, fibroblasts)
# Subset cells
set.seed(123) # Reproducibility purpose
cells_to_keep <- sample(seq_len(ncol(ctr)), size = min(20000, ncol(ctr)))
ctr <- ctr[, cells_to_keep]
SpatialFeaturePlot(cnc, features = "nCount_RNA",
image.scale = "hires", pt.size.factor = 1) +
theme(legend.position = "right") +
scale_fill_viridis_c(option = "H")
ggsave("./Images/Pre-Normalization RNA_Count.pdf")
cnc <- SCTransform(cnc,
assay = "RNA",
verbose = FALSE)
ctr <- SCTransform(ctr,
assay = "RNA",
verbose = FALSE)
# Cancer
cnc <- RunPCA(cnc, assay = "SCT", verbose = FALSE)
cnc <- FindNeighbors(cnc, reduction = "pca", dims = 1:30, verbose = FALSE)
cnc <- FindClusters(cnc, verbose = FALSE)
cnc <- RunUMAP(cnc, reduction = "pca", dims = 1:30, verbose = FALSE)
# Control
ctr <- RunPCA(ctr, assay = "SCT", verbose = FALSE)
ctr <- FindNeighbors(ctr, reduction = "pca", dims = 1:30, verbose = FALSE)
ctr <- FindClusters(ctr, verbose = FALSE)
ctr <- RunUMAP(ctr, reduction = "pca", dims = 1:30, verbose = FALSE)
gene_markers = c("KRT20", "ACTA2")
immune_markers <- c("CD3D", "CD4", "FOXP3", "CD8A", "CD68", "CD163")
corr_imm_expr <- GetAssayData(cnc) %>%
as.data.frame() %>%
filter(rownames(.) %in% c("KRT20", "ACTA2", "CD3D", "CD4", "CD68", "CD163")) %>%
t(.) %>%
as.data.frame()
cor_imm_matrix <- cor(corr_imm_expr, method = "pearson")
immuno_cor_plot <- corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, col = colors[c(1, 3)], is.corr = T, outline = T,
title = "Correlation between different marker genes")
immuno_cor_plot
pdf("./Images/Immune Markers Correlations.pdf")
corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, col = colors[c(1, 3)], is.corr = T, outline = T,
title = "Correlation between different marker genes")
dev.off()
immuno_cor_plot <- corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, col = colors[c(1, 3)], is.corr = T, outline = F,
title = "Correlation between different marker genes")
immuno_cor_plot <- corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, col = colors[c(1, 3)], is.corr = T, outline = T)
corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, col = colors[c(1, 3)], is.corr = T, outline = T)
pdf("./Images/Immune Markers Correlations.pdf")
corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, col = colors[c(1, 3)], is.corr = T, outline = T)
dev.off()
corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, is.corr = T, outline = T)
pdf("./Images/Immune Markers Correlations.pdf")
corrplot(cor_imm_matrix, method = "ellipse",
type = "lower", diag = F, is.corr = T, outline = T)
dev.off()
ggsave("./Images/Gene Marker Cancer Violin.pdf")
